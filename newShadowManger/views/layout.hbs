<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{title}}</title>
    <link rel="stylesheet" type="text/css" href="/stylesheets/style.css">
    <!-- 新 Bootstrap 核心 CSS 文件 -->
    <link rel="stylesheet" href="http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css">
    <style type="text/css">
        .booklist dt {
            float: left;
            width: 10%;
            /*text-align: right;*/
        }

        .booklist dd {
            width: 90%;
            float: right;
        }
    </style>
</head>
<body>
<!-- 公共头部 -->
<nav class="navbar navbar-default navbar-static-top" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <div class="navbar-header">
                <a class="navbar-brand" href="#">独立团</a>
            </div>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            {{#each arr}}
                <ul class="nav navbar-nav">
                    <li class="{{app_list}}"><a href="/app_list">app 管理</a></li>
                    <li class="{{userpostion}}"><a href="/userpositon">展示单用户行为</a></li>
                    <li class="{{abuser}}"><a href="/abuser">展示a/b 用户统计</a></li>
                    <li class="{{absetting}}"><a href="/absetting">设置A/B testting</a></li>
                    <li class="{{hotfixResult}}"><a href="/hotfixResult">展示补丁修复信息</a></li>
                    <li class="{{abt}}"><a href="/about">关于</a></li>

                </ul>
            {{/each}}

        </div>
    </div>
</nav>
<div class='container'>
    {{#if success_msg}}
        <div class="alert alert-success">{{success_msg}}</div>
    {{/if}}
    {{#if error_msg}}
        <div class="alert alert-danger">{{error_msg}}</div>
    {{/if}}
</div>

<!-- 内容部分 -->
{{{body}}}


<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="http://cdn.bootcss.com/jquery/1.11.1/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="http://cdn.bootcss.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
<!-- <script src="http://v3.bootcss.com/assets/js/docs.min.js"></script> -->
<script type="text/javascript">

    function CustomDropDown(element) {
        this.dropdown = element;
        this.placeholder = this.dropdown.find(".placeholder");
        this.options = this.dropdown.find("ul.dropdown-menu > li");
        this.val = '0';
        this.index = -1;//默认为-1;
        this.initEvents();//初始化事件
    }
    //原型方法
    CustomDropDown.prototype = {

        initEvents: function () {
            var obj = this;
            //点击下拉列表的选项
            obj.options.on("click", function () {
                var opt = $(this);
                obj.text = opt.find("a").text();
                obj.val = opt.attr("value");
                obj.index = opt.index();
                obj.placeholder.text(obj.text);
                console.log(obj.getValue());
            });
        },
        getText: function () {
            return this.text;
        },
        getValue: function () {
            return this.val;
        },
        getIndex: function () {
            return this.index;
        }
    };


    function formSubmit() {
        var value = document.getElementById("us").value; //灰度设置
        $.StandardPost("/graySettingPost", {
            value: value
        });
    }

    $(document).ready(function () {


        $(".versionDetail").each(function (index) {

            $(".versionDetail").eq(index).click(function () {

                var versionName = $(".version_name_item").eq(index).text();

                var temp = $("#APP_ID").text();
                var index_str = temp.indexOf(": ") + 2;
                var appId = temp.substr(index_str, temp.length);

                var url = '/patchManager' + "?versionName=" + versionName + "&appVersion=" + appId;

                //跳转结果页 GET
                document.location.href = url;
            });
        });
    });


    $(document).ready(function () {
        $(".appDetail").each(function (index) {

            $(".appDetail").eq(index).click(function () {
                var appUid = $(".appUid").eq(index).text();
                var url = '/appDetail' + "?appUid=" + appUid;
                //跳转结果页 GET
                document.location.href = url;
            });
        });
    });


    $(document).ready(function () {
        $(".one_user_detail").each(function (index) {
            $(".one_user_detail").eq(index).click(function () {
                var id = $(".id").eq(index).text();
                $.StandardPost("/oneUserDetail", {
                    id: id
                });
            });
        });
    });


    $(document).ready(function () {
        $(".patch_detail").each(function (index) {
            $(".patch_detail").eq(index).click(function () {
                var hash = $(".hashCode").eq(index).text();
                document.location.href = '/patch?hashCode='+hash;
//                $.StandardPost("/patch", {
//                    hashCode: hash
//                });
            });
        });
    });


    $(document).ready(function () {
        $(".revert_item").each(function (index) {
            $(".revert_item").eq(index).click(function () {

                var hashCode = $(".hashCode").eq(index).text();
                $.StandardPost("/reverSettingResult", {
                    hashCode: hashCode
                });
            });
        });
    });

    $(document).ready(function () {
        $(".login").click(function () {
            document.location.href = '/app_list';
        });
    });

    //路由 注册的post 方式   构建post请求
    $.extend({
        StandardPost: function (url, args) {

            var form = $("<form method='post'></form>");
            var input;
            form.attr({"action": url});
            $.each(args, function (key, value) {
                input = $("<input type='hidden'>");
                input.attr({"name": key});
                input.val(value);
                form.append(input);
            });
            form.appendTo(document.body);
            form.submit();
            document.body.removeChild(form[0]);
        }
    });

    $('#editfile').submit(function (e) {
        var data = new FormData();
        data.append('file', $('#upfile')[0].files[0]);
        $.ajax({
            url: '/uploads',
            data: data,
            processData: false,
            contentType: false,
            type: 'POST',
            success: function (data) {
                console.log("data = ");   //返回上传后所在的路径

            }
        });
        e.preventDefault();
    });


</script>
</body>
</html>